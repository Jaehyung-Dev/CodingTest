// 문제 : A반 학생들은 시험이 끝난 뒤 성적이 나오기 전 자기 시험지를 가채점해 보았습니다. 이후에 선생님이 실제 성적을 불러 줄 때 가채점한 점수와 실제 성적이 다른 학생들이 있어 선생님께 문의를 하려고 합니다.

// 성적을 문의하려는 학생들의 번호가 담긴 정수 리스트 numbers와 가채점한 점수가 성적을 문의하려는 학생 순서대로 담긴 정수 리스트 our_score, 
// 실제 성적이 번호 순서대로 담긴 정수 리스트 score_list가 주어집니다. 
// 주어진 solution 함수는 가채점한 점수가 실제 성적과 동일하다면 "Same"을, 다르다면 "Different"를 순서대로 리스트에 담아 return하는 함수입니다. 
// solution 함수가 올바르게 작동하도록 한 줄을 수정해 주세요.

class Solution {
    public String[] solution(int[] numbers, int[] our_score, int[] score_list) {
        int num_student = numbers.length;
        String[] answer = new String[num_student];

        for (int i = 0; i < num_student; i++) {
            if (our_score[i] == score_list[i]) {
                answer[i] = "Same";
            }
            else {
                answer[i] = "Different";
            }
        }

        return answer;
    }
}

// 1.문제에서 our_score[i] 와 score_list[i]를 비교하면 학생의 번호에 따른 결과가 아닌 인덱스의 개수번째에 따른 비교를 하게되고
// 원하는 값을 얻기 위해서는 학생의 번호와 같은 score_list의 인덱스번째를 비교해야 한다고 생각되어 numbers[i]를 넣어줬다.
class Solution {
    public String[] solution(int[] numbers, int[] our_score, int[] score_list) {
        int num_student = numbers.length;
        String[] answer = new String[num_student];

        for (int i = 0; i < num_student; i++) {
            if (our_score[i] == score_list[numbers[i]) {
                answer[i] = "Same";
            }
            else {
                answer[i] = "Different";
            }
        }

        return answer;
    }
}

// 풀이 : 위 답안처럼 numbers[i]주면 for문 조건의 인덱스는 0부터 시작하고 학생의 번호는 0번이 아닌 1번부터 시작하기 때문에 서로 원하는 비교가 불가능
// 그러므로 numbers[i]에 -1을 하여 인덱스의 시작 값과 학생의 번호를 맞춰주는 작업이 필요하다.
class Solution {
    public String[] solution(int[] numbers, int[] our_score, int[] score_list) {
        int num_student = numbers.length;
        String[] answer = new String[num_student];

        for (int i = 0; i < num_student; i++) {
            if (our_score[i] == score_list[numbers[i]-1]) {
                answer[i] = "Same";
            }
            else {
                answer[i] = "Different";
            }
        }

        return answer;
    }
}
