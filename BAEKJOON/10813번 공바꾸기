// 문제 : 바구니를 총 N개 가지고 있고, 각각의 바구니에는 1번부터 N번까지 번호가 매겨져 있다. 
// 바구니에는 공이 1개씩 들어있고, 처음에는 바구니에 적혀있는 번호와 같은 번호가 적힌 공이 들어있다.
// M번의 횟수만큼 공을 바꾸려고 한다. 공을 바꿀 바구니 2개를 선택하고, 두 바구니에 들어있는 공을 서로 교환한다.
// 첫째 줄에 N (1 ≤ N ≤ 100)과 M (1 ≤ M ≤ 100)이 주어진다.
// 둘째 줄부터 M개의 줄에 걸쳐서 공을 교환할 방법이 주어진다. 
// 각 방법은 두 정수 i j로 이루어져 있으며, i번 바구니와 j번 바구니에 들어있는 공을 교환한다는 뜻이다. 

// 해설 : 바구니와 공의 개수 N, M을 받고 공을 담을 바구니 배열을 하나 선언한 뒤
// 반복문을 통해 바구니의 번호와 맞는 공을 담아주고(인덱스는 0부터 시작이므로 번호를 맞추기 위해 +1을 해줬다)
// 이후 받은 두 값에 해당하는 번호의 바구니 안 공을 서로 바꿔야 하므로 
// i와 j를 받아 한 값을 임시변수에 저장한 뒤 서로 값을 변경하고 임시 변수 값을 통해 다른 값도 변경해줬다
// 여기서 받아온 값에 -1을 한 이유는 인덱스와 맞추기 위함

import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int M = sc.nextInt();
		int[] Narr = new int[N];
		
		for(int a = 0; a < Narr.length; a++) {
			Narr[a] = a + 1;
		}
		
		for(int a = 0; a < M; a++) {
			int i = sc.nextInt()-1;
			int j = sc.nextInt()-1;
			int tem = Narr[i];
			Narr[i] = Narr[j];
			Narr[j] = tem;
		}
		
		for(int i = 0; i < Narr.length; i++) {
			System.out.println(Narr[i]);
		}
	}
}
